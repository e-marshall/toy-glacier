name: Publish to PyPI

on:
  push:
    tags:
      - 'v*' # real release, publish to PyPI
      - 'test-*' # test release, publish to TestPyPI

jobs:
  publish-pypi:
    if: startsWith(github.ref_name, 'v')
    name: Publish to PyPI
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Debug workflow identity
        run: |
          echo "GITHUB_REPOSITORY=$GITHUB_REPOSITORY"
          echo "GITHUB_WORKFLOW_REF=$GITHUB_WORKFLOW_REF"
          echo "GITHUB_REF=$GITHUB_REF"
          echo "GITHUB_REF_NAME=$GITHUB_REF_NAME"


      - name: Install uv and setup the python version
        uses: astral-sh/setup-uv@v5

      - name: Install the project
        run: uv sync --all-groups

      - name: Build wheel
        run: uv build

      - name: Show built distribution metadata (Name / Version)
        run: |
          python - <<'PY'
          import glob, zipfile
          whl = sorted(glob.glob("dist/*.whl"))[-1]
          with zipfile.ZipFile(whl) as z:
              meta = [n for n in z.namelist() if n.endswith("METADATA")][0]
              text = z.read(meta).decode()
              for line in text.splitlines():
                  if line.startswith("Name: ") or line.startswith("Version: "):
                      print(line)
          PY

      - name: Publish package (PyPI)
        if: startsWith(github.ref_name, 'v')
        run: uv publish --trusted-publishing always

  publish-testpypi:
    if: startsWith(github.ref_name, 'test')
    name: Publish to TestPyPI
    runs-on: ubuntu-latest
    environment: testpypi
    permissions:
        contents: read
        id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Install uv and setup the python version
        uses: astral-sh/setup-uv@v5
      - name: Install the project
        run: uv sync --all-groups
      - name: Build wheel
        run: uv build
      - name: Publish package (TestPyPI, OIDC)
        if: startsWith(github.ref_name, 'test')
        run: uv publish --publish-url https://test.pypi.org/legacy/